# -*- coding: UTF-8 -*-
#
# generated by wxGlade not found on Wed Oct 28 23:41:32 2015 from "/home/devin/Documents/ShuffleIR-Mobile/ShuffleFrame.wxg"
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

import config
import dataNationalDex


class dialogSelectIcons(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: dialogSelectIcons.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE | wx.DIALOG_NO_PARENT | wx.STAY_ON_TOP
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("double click to add/remove"), style=wx.ALIGN_LEFT)
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=[], style=wx.LB_MULTIPLE | wx.LB_NEEDED_SB)
        self.button_2 = wx.Button(self, wx.ID_ANY, _("Add to list"))
        self.list_box_2 = wx.ListBox(self, wx.ID_ANY, choices=[], style=wx.LB_MULTIPLE | wx.LB_NEEDED_SB)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("Remove from list"))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Save"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_LISTBOX_DCLICK, self.onAdd, self.list_box_1)
        self.Bind(wx.EVT_BUTTON, self.onAdd, self.button_2)
        self.Bind(wx.EVT_LISTBOX_DCLICK, self.onRemove, self.list_box_2)
        self.Bind(wx.EVT_BUTTON, self.onRemove, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.onSave, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.onCancel, self.button_4)
        # end wxGlade

        
        # Initialize support list
        self.listSupport = list(config.listSupport)
        self.listSupport.sort()
        
        # Listbox
        self.list_box_1.Clear()
        self.list_box_2.Clear()
        for key in dataNationalDex.keys:
            self.list_box_1.Append(key + " : " + dataNationalDex.list.get(key))
        
        for key in self.listSupport:
            self.list_box_2.Append(key + " : " + dataNationalDex.list.get(key))
            
    def __set_properties(self):
        # begin wxGlade: dialogSelectIcons.__set_properties
        self.SetTitle(_("Select Suppoted Icons"))
        self.list_box_1.SetMinSize((240, 240))
        self.list_box_2.SetMinSize((240,80))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: dialogSelectIcons.__do_layout
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_5.Add(self.label_1, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_5.Add(self.list_box_1, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_5.Add(self.button_2, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_5.Add(self.list_box_2, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_5.Add(self.button_1, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_5.Add(self.button_3, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_5.Add(self.button_4, 0, wx.ALIGN_CENTER | wx.EXPAND, 0)
        self.SetSizer(sizer_5)
        sizer_5.Fit(self)
        self.Layout()
        # end wxGlade

    def onAdd(self, event):  # wxGlade: dialogSelectIcons.<event_handler>
        for index in self.list_box_1.GetSelections():
            key = dataNationalDex.keys[index]
            # Try append
            lst =list(self.listSupport)
            lst.append(key)
            lst = list(set(lst))
            # Added?
            if len(lst) > len(self.listSupport):
                # Append
                self.listSupport.append(key)
                self.list_box_2.Append(self.list_box_1.GetString(index))
                print "Adding: " + self.list_box_1.GetString(index) 
            else:
                print "Added already: " + self.list_box_1.GetString(index) 

    def onRemove(self, event):  # wxGlade: dialogSelectIcons.<event_handler>
        # Reverse Selected Indexes
        for index in self.list_box_2.GetSelections()[::-1]:
            print "Removing: " + self.list_box_2.GetString(index) 
            self.list_box_2.Delete(index) 
            self.listSupport.pop(index) 
            
    def onSave(self, event):  # wxGlade: dialogSelectIcons.<event_handler>
        config.listSupport = list(self.listSupport)
        self.EndModal(wx.OK)

    def onCancel(self, event):  # wxGlade: dialogSelectIcons.<event_handler>
        self.EndModal(wx.CANCEL)
        

# end of class dialogSelectIcons
